SET(CMAKE_BUILD_TYPE Debug)
CMAKE_MINIMUM_REQUIRED(VERSION 3.22)
PROJECT(AdpartSim VERSION 1.0)
ADD_COMPILE_OPTIONS(-Werror -Wall -Wno-deprecated-declarations)

# use c++20
SET(CMAKE_CXX_STANDARD 20)
SET(CMAKE_CXX_STANDARD_REQUIRED ON)

# build AdpartSim Target
ADD_EXECUTABLE(${PROJECT_NAME} "src/main.cc")
FILE(GLOB_RECURSE SOURCES "src/**")
TARGET_SOURCES(${PROJECT_NAME} PRIVATE ${SOURCES})
TARGET_INCLUDE_DIRECTORIES(${PROJECT_NAME} PRIVATE "include")

# find third party packages
FIND_PACKAGE(Boost REQUIRED COMPONENTS system filesystem)
FIND_PACKAGE(nlohmann_json REQUIRED HINTS "tools/json")
FIND_PACKAGE(glog REQUIRED HINTS "tools/glog")
FIND_PACKAGE(ns3 REQUIRED HINTS "tools/ns3")

# add third party library
TARGET_LINK_LIBRARIES(${PROJECT_NAME} Boost::filesystem)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} Boost::system)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} nlohmann_json)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} glog::glog)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} ns3::libcore)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} ns3::libnetwork)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} ns3::libinternet)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} ns3::libapplications)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} ns3::libpoint-to-point)

# Add Chakra Component
FIND_PACKAGE(Protobuf REQUIRED)
FILE(GLOB_RECURSE SOURCES "tools/chakra/**")
TARGET_SOURCES(${PROJECT_NAME} PRIVATE ${SOURCES})
TARGET_INCLUDE_DIRECTORIES(${PROJECT_NAME} PRIVATE "tools/chakra/feeder")
TARGET_INCLUDE_DIRECTORIES(${PROJECT_NAME} PRIVATE "tools/chakra/schema/protobuf")
TARGET_INCLUDE_DIRECTORIES(${PROJECT_NAME} PRIVATE "tools/chakra/third_party/utils")
TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${PROTOBUF_LIBRARIES})
